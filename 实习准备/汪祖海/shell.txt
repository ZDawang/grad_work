Shell本身是一个用C语言编写的程序，它是用户使用Linux的桥梁。Shell既是一种命令语言，
又是一种程序设计语言。作为命令语言，它交互式地解释和执行用户输入的命令；
作为程序设计语言，它定义了各种变量和参数，
并提供了许多在高级语言中才具有的控制结构，包括循环和分支

shell就是一个命令行解释器，它为用户提供了一个向Linux内核发送请求以便运行程序的界面系统级程序，
用户可以用shell来启动、挂起、停止甚至是编写一些程序

而在Linux下比较流行的shell有好几个，每个shell都各有千秋。一般的Linux系统都将bash作为默认的shell。


编译型语言的好处是高效，缺点则是：它们多半运作于底层，所处理的是字节、整数、浮点数或是其他机器层级的对象。
例如，在C++里，就很难进行“将一个目录里所有的文件复制到另一个目录中”之类的简单操作。


脚本编程语言通常是解释型(interpreted)的。这类程序的执行，是由解释器(interpreter)读入程序代码，
并将其转换成内部的形式，再执行（注2）。请注意，解释器本身是一般的编译型程序。


使用脚本编程语言的好处是，它们多半运行在比编译型语言还高的层级，能够轻易处理文件与目录之类的对象。缺点是：它们的效率通常不如编译型语言。
不过权衡之下，通常使用脚本编程还是值得的：花一个小时写成的简单脚本，同样的功能用C或C++来编写实现，
可能需要两天，而且一般来说，脚本执行的速度已经够快了，快到足以让人忽略它性能上的问题。
脚本编程语言的例子有awk、Perl、Python、Ruby与Shell。